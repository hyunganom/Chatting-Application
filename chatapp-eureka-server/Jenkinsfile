pipeline {
    agent any
    tools {
        jdk 'JDK11'
        maven 'MAVEN_HOME'
    }


    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials-id') // 자격 증명 ID
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/hyunganom/Chatting-Application.git', branch: 'main'
            }
        }

        stage('Build') {
            steps {
                dir('chatapp-eureka-server') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('chatapp-eureka-server') {
                    script {
                        // Docker 이미지 빌드
                        def image = docker.build("rheonik/chat-eureka-server:1.0")

                        // Docker Hub에 로그인 및 이미지 푸시
                        docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials-id') {
                            image.push()
                        }
                    }
                }
            }
        }

        stage('Deploy with Docker Compose') {
            steps {
                script {
                    // Jenkins 작업 공간 경로로 이동하여 Docker Compose 실행
                    sh '''
                        cd /var/jenkins_home/workspace/${JOB_NAME}/
                        docker-compose pull eureka-server
                        docker-compose up -d eureka-server
                    '''
                }
            }
        }
    }

    post {
        always {
            // 필요 시 정리 작업 수행
            echo '파이프라인 완료'
        }
        failure {
            // 실패 시 알림 등 처리
            echo '파이프라인 실패'
        }
    }
}
