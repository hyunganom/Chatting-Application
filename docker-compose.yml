version: '3.8'

services:
  eureka-server:
    image: rheonik/chat-eureka-server:1.0
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/eureka/" ]
      interval: 30s
      timeout: 10s
      retries: 3

  apigateway-server:
    image: rheonik/chat-apigateway-server:1.0
    container_name: api-gateway
    ports:
      - "8000:8000"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_SERVER_URI=http://eureka-server:8761/eureka
      - EUREKA_INSTANCE_LEASE_RENEWAL_INTERVAL_IN_SECONDS=10 # 등록 갱신 주기
      - EUREKA_INSTANCE_LEASE_EXPIRATION_DURATION_IN_SECONDS=30 # 등록 만료 시간
    networks:
      - app-network
    depends_on:
      - eureka-server
  
  user-service:
    image: rheonik/chat-user-service:1.0  # replace with actual image name
    container_name: user-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres_container:5432/chatapp_db?sslmode=disable
      - SPRING_DATASOURCE_USERNAME=chatuser
      - SPRING_DATASOURCE_PASSWORD=chatpass
      - SPRING_REDIS_HOST=redis_container
      - SPRING_REDIS_PORT=6379
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - app-network
    depends_on:
      - postgres
      - redis
      - eureka-server

  postgres:
    image: postgres:13
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_USER: chatuser
      POSTGRES_PASSWORD: chatpass
      POSTGRES_DB: chatapp_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /Users/hyunjae/desktop/postgresql.conf:/etc/postgresql/postgresql.conf  # 올바른 경로로 수정
      - /Users/hyunjae/desktop/logs/postgresql:/var/log/postgresql  # PostgreSQL 로그 경로 마운트
    command: [ "postgres", "-c", "config_file=/etc/postgresql/postgresql.conf" ]  # 올바른 설정 파일 경로 사용

  mongo:
    image: mongo:4.4
    container_name: mongo_container
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:6.2
    container_name: redis_container
    restart: always
    ports:
      - "6379:6379"
    command: [ "redis-server", "--appendonly", "yes" ]
    volumes:
      - redis_data:/data
      - /Users/hyunjae/desktop/logs/redis:/var/log/redis  # Redis 로그 경로 마운트


networks:
  app-network:
    driver: bridge


volumes:
  postgres_data:
  mongo_data:
  redis_data: